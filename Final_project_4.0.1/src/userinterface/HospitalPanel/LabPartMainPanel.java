/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalPanel;

/**
 *
 * @author prospace
 */

import javax.swing.*;
import Business.*;
import Business.Admin.*;
import Business.DB4OUtil.*;
import Business.Disease.*;
import Business.Doctor.*;
import Business.Enterprise.*;
import Business.Network.*;
import Business.Patient.*;
import Business.Recode.*;
import java.awt.*;
import java.io.File;
import javax.swing.table.DefaultTableModel;
import java.util.*;

public class LabPartMainPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabPartMainPanel
    */
    JPanel rightPanel;
    Hospital hospital;
    ArrayList<Disease> disease_list = new ArrayList<>();
    File directory = new File("");
    String pex=directory.getAbsolutePath()+"/images/";
    public LabPartMainPanel(JPanel rightPanel, Hospital hospital) {
        initComponents();
        this.rightPanel = rightPanel;
        this.hospital = hospital;
        init_work();
        populate();
        //
        //UI
        ImageIcon icon=new ImageIcon(pex+"hostitle.png");
        title.setText("");
        title.setIcon(icon);
        initBTN();
    }
    
    //
    //
     public void initBTN(){
         resetButton(SearchBtn,
                pex+"Search1.png",
                pex+"Search2.png");
          resetButton(RBtn,
                pex+"addone1.png",
                pex+"reportone.png");
          resetButton(RABtn,
                pex+"addall1.png",
                pex+"reportall.png");
          resetButton(BackBtn,
                pex+"back1.png",
                pex+"back2.png");
           resetButton(referBTN,
                pex+"reference1.png",
                pex+"reference2.png");
    }
    //
     public void resetButton(JButton btn,String path1,String path2){
       ImageIcon img1 = new ImageIcon(path1);
       ImageIcon img2 = new ImageIcon(path2);
      // ImageIcon img3 = new ImageIcon("/Users/cestdrama/Desktop/swg1207/display_pressed.jpg");        
          btn.setText("");
          btn.setSize(img2.getIconWidth(),img2.getIconHeight());
          btn.setContentAreaFilled(false);
          //BTN1.setBorderPainted(false);
          btn.setIcon(img1);
          btn.setPressedIcon(img2); 
          btn.setRolloverIcon(img2);
          //btn.setBorderPainted(false);
    }
    public void init_work(){
        for (int x : Datastore.getInstance().getRecords().keySet()){
            Recode tmpr = Datastore.getInstance().getRecords().get(x);
            //System.out.println(tmpr.getHospital() + hospital.getName());
            if (tmpr.getHospital().equals(hospital.getName()) == true){
                if (disease_list.contains(Datastore.getInstance().getDiseases().get(tmpr.getDisName()))==false){
                    disease_list.add(Datastore.getInstance().getDiseases().get(tmpr.getDisName()));
                }
            }
        }
        //System.out.println(disease_list.size()+"~~~~~~~~~~~~~~~~");
        if (Datastore.getInstance().getDislists().containsKey(hospital.getName()) == true){
                DiseaseList tmplist = Datastore.getInstance().getDislists().get(hospital.getName());
                for (Disease dis: tmplist.getList())
                    if (disease_list.contains(dis)==false)
                        disease_list.add(dis);
            }
    }
    
    public void populate(){
        DefaultTableModel dtm1 = (DefaultTableModel)DiseaseTable.getModel();
        dtm1.setRowCount(0);
        
        for(Disease a : disease_list){
            Object[] row = new Object[dtm1.getColumnCount()];
            row[0] = a;
            row[1] = a.getTreatment();
            row[2] = String.valueOf(a.getIsreport());
            dtm1.addRow(row);
        }
        ReportSlec.setSelected(true);
        NoReportSlc.setSelected(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DiseaseTable = new javax.swing.JTable();
        SearchBtn = new javax.swing.JButton();
        RBtn = new javax.swing.JButton();
        RABtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        Nametext = new javax.swing.JTextField();
        TMText = new javax.swing.JTextField();
        ReportSlec = new javax.swing.JRadioButton();
        NoReportSlc = new javax.swing.JRadioButton();
        referBTN = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        hosText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        DiseaseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Treatment", "Reported"
            }
        ));
        jScrollPane1.setViewportView(DiseaseTable);

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        RBtn.setText("Report");
        RBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBtnActionPerformed(evt);
            }
        });

        RABtn.setText("ReportAll");
        RABtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RABtnActionPerformed(evt);
            }
        });

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        Nametext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NametextActionPerformed(evt);
            }
        });

        ReportSlec.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        ReportSlec.setText("Reported");

        NoReportSlc.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        NoReportSlc.setText("Not Reported");
        NoReportSlc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoReportSlcActionPerformed(evt);
            }
        });

        referBTN.setText("reference");
        referBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                referBTNActionPerformed(evt);
            }
        });

        title.setText("jLabel3");

        jLabel6.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 255));
        jLabel6.setText(">>>>>Medical record list >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ");

        jLabel7.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 255));
        jLabel7.setText(">>>>>Record Reference >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ");

        jLabel11.setFont(new java.awt.Font("Monaco", 3, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 0, 102));
        jLabel11.setText("Hospital name:");

        jLabel12.setFont(new java.awt.Font("Monaco", 3, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 102));
        jLabel12.setText("Treatmnet:");

        jLabel13.setFont(new java.awt.Font("Monaco", 3, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 0, 102));
        jLabel13.setText("Report situation:");

        jLabel8.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 255));
        jLabel8.setText(">>>>>Searching conditions>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ");

        jLabel14.setFont(new java.awt.Font("Monaco", 3, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 0, 102));
        jLabel14.setText("Disease name:");

        jLabel9.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 255));
        jLabel9.setText(">>>>>>>>>>>>>>>>>>>>>>..>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(SearchBtn)
                        .addGap(87, 87, 87)
                        .addComponent(RBtn)
                        .addGap(72, 72, 72)
                        .addComponent(RABtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114)
                        .addComponent(BackBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hosText, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(referBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Nametext, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(18, 18, 18)
                                        .addComponent(ReportSlec)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NoReportSlc)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TMText, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RABtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(Nametext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(TMText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(ReportSlec)
                    .addComponent(NoReportSlc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(hosText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(referBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jLabel9)
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
        String s1 = Nametext.getText();
        String s2 = TMText.getText();
        
        DefaultTableModel dtm1 = (DefaultTableModel)DiseaseTable.getModel();
        dtm1.setRowCount(0);
        
        for(Disease a : disease_list){
            if (s1.equals("")==false&&a.getName().contains(s1)==false) continue;
            if (s2.equals("")==false&&a.getTreatment().contains(s2)==false) continue;
            if (ReportSlec.isSelected()==false && a.getIsreport()==1) continue;
            if (NoReportSlc.isSelected()==false && a.getIsreport()==0) continue;
            Object[] row = new Object[dtm1.getColumnCount()];
            row[0] = a;
            row[1] = a.getTreatment();
            row[2] = String.valueOf(a.getIsreport());
            dtm1.addRow(row);
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void RBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBtnActionPerformed
        // TODO add your handling code here:
        int selectRow = DiseaseTable.getSelectedRow();
        if (selectRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a Row");
        }else {
            Disease dis = (Disease) DiseaseTable.getValueAt(selectRow, 0);
            if (dis.getIsreport() == 1) {
                JOptionPane.showMessageDialog(null, "Already Reported!");
                return;
            }else{
                dis.setIsreport(1);
                JOptionPane.showMessageDialog(null, "Report Successfully!");
                populate();
            }
        }
        return;
    }//GEN-LAST:event_RBtnActionPerformed

    private void RABtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RABtnActionPerformed
        // TODO add your handling code here:
        for (Disease x: disease_list){
            x.setIsreport(1);
        }
        JOptionPane.showMessageDialog(null, "Report All Successfully!");
        populate();
    }//GEN-LAST:event_RABtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void referBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_referBTNActionPerformed
        // TODO add your handling code here:
        String s1 = hosText.getText();
        if (s1.equals("")){
            JOptionPane.showMessageDialog(null, "please input a hospital name");
            return;
        }
        
        if (Datastore.getInstance().getHospitals().containsKey(s1)==false){
            JOptionPane.showMessageDialog(null, "No such a hospital");
            return;
        }
        Hospital hos = Datastore.getInstance().getHospitals().get(s1);
        DiseaseList dislist = null;
        if (Datastore.getInstance().getDislists().containsKey(hos.getName()) == true)
            dislist = Datastore.getInstance().getDislists().get(hos.getName());
        else {
            dislist = new DiseaseList();
            Datastore.getInstance().getDislists().put(hos.getName(), dislist);
        }
        
        for (int x : Datastore.getInstance().getRecords().keySet()){
            Recode tmpr = Datastore.getInstance().getRecords().get(x);
            //System.out.println(tmpr.getHospital() + hospital.getName());
            if (tmpr.getHospital().equals(hos.getName()) == true){
                if (dislist.getList().contains(Datastore.getInstance().getDiseases().get(tmpr.getDisName()))==false){
                    dislist.getList().add(Datastore.getInstance().getDiseases().get(tmpr.getDisName()));
                }
            }
        }
        
        if (Datastore.getInstance().getDislists().containsKey(hospital.getName()) == true){
                DiseaseList tmplist = Datastore.getInstance().getDislists().get(hospital.getName());
                for (Disease dis: tmplist.getList())
                    if (dislist.getList().contains(dis)==false)
                        dislist.getList().add(dis);
        }
        
        for (Disease dis: dislist.getList() ){
            if (disease_list.contains(dis)==false)
                disease_list.add(dis);
        }
        
        JOptionPane.showMessageDialog(null, "Refer successfully");
        
        populate();
        
    }//GEN-LAST:event_referBTNActionPerformed

    private void NoReportSlcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoReportSlcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NoReportSlcActionPerformed

    private void NametextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NametextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NametextActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JTable DiseaseTable;
    private javax.swing.JTextField Nametext;
    private javax.swing.JRadioButton NoReportSlc;
    private javax.swing.JButton RABtn;
    private javax.swing.JButton RBtn;
    private javax.swing.JRadioButton ReportSlec;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField TMText;
    private javax.swing.JTextField hosText;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton referBTN;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
